SELECT
    sum(l_extendedprice) / 7.0 AS avg_yearly
FROM
    lineitem,
    part
WHERE
    p_partkey = l_partkey
    AND p_brand = 'Brand#23'
    AND p_container = 'MED BOX'
    AND l_quantity < (
        SELECT
            0.2 * avg(l_quantity)
        FROM
            lineitem
        WHERE
            l_partkey = p_partkey
    );


Original
Project(sum(l_extendedprice) / 7.0) -> .avg_yearly
 Agg(sum(l_extendedprice)) group by () -> .sum(l_extendedprice) 
    Apply(c=1) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment, .p_partkey, .p_name, .p_mfgr, .p_brand, .p_type, .p_size, .p_container, .p_retailprice, .p_comment    
       Project(cast(0.2 as Double) * avg(l_quantity)) -> .cast(0.2 as Double) * avg(l_quantity)       
          Agg(avg(l_quantity)) group by () -> .avg(l_quantity)          
             Filter(l_partkey = p_partkey) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment             
                Scan(lineitem) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment                
       JoinSet(lineitem (Inner) x part (Inner)) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment, .p_partkey, .p_name, .p_mfgr, .p_brand, .p_type, .p_size, .p_container, .p_retailprice, .p_comment       
       BinaryEdge { Expression = p_partkey = l_partkey, One = lineitem, Two = part }
       UnaryEdge { Expression = p_brand = Brand#23, Relation = part }
       UnaryEdge { Expression = p_container = MED BOX, Relation = part }
       UnaryEdge { Expression = l_quantity < correlated-subquery(1), Relation = lineitem }
          Scan(lineitem) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment          
          Scan(part) -> .p_partkey, .p_name, .p_mfgr, .p_brand, .p_type, .p_size, .p_container, .p_retailprice, .p_comment          


Optimized
Project(sum(l_extendedprice) / 7.0) -> .avg_yearly
 Agg(sum(l_extendedprice)) group by () -> .sum(l_extendedprice) 
    Apply(c=1) -> .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container    
       Project(cast(0.2 as Double) * avg(l_quantity)) -> .cast(0.2 as Double) * avg(l_quantity)       
          Agg(avg(l_quantity)) group by () -> .avg(l_quantity)          
             Filter(l_partkey = p_partkey) -> .l_partkey, .l_quantity             
                Scan(lineitem) with projection  -> .l_partkey, .l_quantity                
       Filter(l_quantity < correlated-subquery(1)) -> .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container       
          Join(Inner on p_partkey = l_partkey) -> .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container          
             Scan(lineitem) with projection  -> .l_partkey, .l_quantity, .l_extendedprice             
          
             Filter(p_container = MED BOX) -> .p_partkey, .p_brand, .p_container             
                Filter(p_brand = Brand#23) -> .p_partkey, .p_brand, .p_container                
                   Scan(part) with projection  -> .p_partkey, .p_brand, .p_container                   


Cost Optimized
Project(sum(l_extendedprice) / 7.0) cost (output_rows=600121, cpu=1200242, disk=0, total=50679) -> .avg_yearly
 UngroupedAggregate(sum(l_extendedprice)) cost (output_rows=600121, cpu=600121, disk=0, total=49478) -> .sum(l_extendedprice) 
    Filter(l_quantity < cast(correlated-subquery(1) as Decimal)) cost (output_rows=600121, cpu=36007290, disk=0, total=48878) -> .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container    
       HashJoin(Inner p_partkey, l_partkey) cost (output_rows=6001215, cpu=6005215, disk=0, total=12871) -> .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container       
          FileScan({SolutionDirectory}tpch/1/lineitem2.parquet) cost (output_rows=6001215, cpu=6001215, disk=49, total=6005) -> .l_partkey, .l_quantity, .l_extendedprice       
          Filter(p_container = MED BOX) cost (output_rows=2000, cpu=60000, disk=0, total=860) -> .p_partkey, .p_brand, .p_container          
             Filter(p_brand = Brand#23) cost (output_rows=20000, cpu=600000, disk=0, total=800) -> .p_partkey, .p_brand, .p_container             
                FileScan({SolutionDirectory}tpch/1/part2.parquet) cost (output_rows=200000, cpu=200000, disk=2, total=200) -> .p_partkey, .p_brand, .p_container