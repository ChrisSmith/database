SELECT
    sum(l_extendedprice) / 7.0 AS avg_yearly
FROM
    lineitem,
    part
WHERE
    p_partkey = l_partkey
    AND p_brand = 'Brand#23'
    AND p_container = 'MED BOX'
    AND l_quantity < (
        SELECT
            0.2 * avg(l_quantity)
        FROM
            lineitem
        WHERE
            l_partkey = p_partkey
    );


Original
Project(sum(l_extendedprice) / 7.0, rows=6001215) -> .avg_yearly
 Agg(sum(l_extendedprice)) group by (, rows=6001215) -> .sum(l_extendedprice) 
    Apply(c=1, rows=6001215) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment, .p_partkey, .p_name, .p_mfgr, .p_brand, .p_type, .p_size, .p_container, .p_retailprice, .p_comment    
       Project(cast(0.2 as Double) * avg(l_quantity), rows=1200243) -> .cast(0.2 as Double) * avg(l_quantity)       
          Agg(avg(l_quantity)) group by (, rows=1200243) -> .avg(l_quantity)          
             Filter(l_partkey = p_partkey, rows=1200243) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment             
                Scan(lineitem, rows=6001215) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment                
       JoinSet(lineitem (Inner) x part (Inner), rows=6001215) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment, .p_partkey, .p_name, .p_mfgr, .p_brand, .p_type, .p_size, .p_container, .p_retailprice, .p_comment       
       BinaryEdge { Expression = p_partkey = l_partkey, One = lineitem, Two = part }
       UnaryEdge { Expression = p_brand = Brand#23, Relation = part }
       UnaryEdge { Expression = p_container = MED BOX, Relation = part }
       UnaryEdge { Expression = l_quantity < cast(correlated-subquery(1) as Decimal), Relation = lineitem }
          Scan(lineitem, rows=6001215) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment          
          Scan(part, rows=200000) -> .p_partkey, .p_name, .p_mfgr, .p_brand, .p_type, .p_size, .p_container, .p_retailprice, .p_comment          


Optimized
Project(sum(l_extendedprice) / 7.0, rows=7202916) -> .avg_yearly
 Agg(sum(l_extendedprice)) group by (, rows=7202916) -> .sum(l_extendedprice) 
    Filter(l_quantity < cast(cast(0.2 as Double) * avg(l_quantity) as Decimal), rows=7202916) -> .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container, correlated0.l_partkey, correlated0.avg(l_quantity)    
       Join(Inner on p_partkey = l_partkey, rows=36014581) -> .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container, correlated0.l_partkey, correlated0.avg(l_quantity)       
          Join(Inner on p_partkey = l_partkey, rows=1200243) -> .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container          
             Scan(lineitem, rows=6001215) with projection  -> .l_partkey, .l_quantity, .l_extendedprice             
          
             Filter(p_container = MED BOX, rows=40000) -> .p_partkey, .p_brand, .p_container             
                Filter(p_brand = Brand#23, rows=40000) -> .p_partkey, .p_brand, .p_container                
                   Scan(part, rows=200000) with projection  -> .p_partkey, .p_brand, .p_container                   
       
          Agg(l_partkey, avg(l_quantity)) group by (l_partkey, rows=6001215) -> correlated0.l_partkey, correlated0.avg(l_quantity)          
             Scan(lineitem, rows=6001215) with projection  -> .l_partkey, .l_quantity, .l_extendedprice             


Cost Optimized
Project(sum(l_extendedprice) / 7.0) cost (output_rows=7202916, cpu=14405832, disk=0, total=373148) -> .avg_yearly
 UngroupedAggregate(sum(l_extendedprice)) cost (output_rows=7202916, cpu=7202916, disk=0, total=358742) -> .sum(l_extendedprice) 
    Filter(l_quantity < cast(cast(0.2 as Double) * avg(l_quantity) as Decimal)) cost (output_rows=7202916, cpu=288116648, disk=0, total=351539) -> correlated0.l_partkey, correlated0.avg(l_quantity), .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container    
       HashJoin(Inner p_partkey, l_partkey) cost (output_rows=36014581, cpu=8401701, disk=0, total=63422) -> correlated0.l_partkey, correlated0.avg(l_quantity), .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container       
          HashAggregate(l_partkey, avg(l_quantity)) cost (output_rows=6001215, cpu=36007290, disk=0, total=42012) -> correlated0.l_partkey, correlated0.avg(l_quantity)          
             FileScan({SolutionDirectory}tpch/1/lineitem2.parquet) cost (output_rows=6001215, cpu=6001215, disk=49, total=6005) -> .l_partkey, .l_quantity, .l_extendedprice       
          HashJoin(Inner p_partkey, l_partkey) cost (output_rows=1200243, cpu=6081215, disk=0, total=13007) -> .l_partkey, .l_quantity, .l_extendedprice, .p_partkey, .p_brand, .p_container          
             FileScan({SolutionDirectory}tpch/1/lineitem2.parquet) cost (output_rows=6001215, cpu=6001215, disk=49, total=6005) -> .l_partkey, .l_quantity, .l_extendedprice          
             Filter(p_container = MED BOX) cost (output_rows=40000, cpu=120000, disk=0, total=920) -> .p_partkey, .p_brand, .p_container             
                Filter(p_brand = Brand#23) cost (output_rows=40000, cpu=600000, disk=0, total=800) -> .p_partkey, .p_brand, .p_container                
                   FileScan({SolutionDirectory}tpch/1/part2.parquet) cost (output_rows=200000, cpu=200000, disk=2, total=200) -> .p_partkey, .p_brand, .p_container