select
    n_name,
    sum(l_extendedprice * (1 - l_discount)) as revenue
from
    customer,
    orders,
    lineitem,
    supplier,
    nation,
    region
where
        c_custkey = o_custkey
    and l_orderkey = o_orderkey
    and l_suppkey = s_suppkey
    and c_nationkey = s_nationkey
    and s_nationkey = n_nationkey
    and n_regionkey = r_regionkey
    and r_name = 'ASIA'
    and o_orderdate >= date '1994-01-01'
    and o_orderdate < date '1994-01-01' + interval '1' year
group by n_name
order by revenue desc;


Original
Project(n_name, revenue, rows=6001215) -> .n_name, .revenue
 Sort(revenue DESC), rows=6001215 -> .revenue, .n_name 
    Agg(sum(l_extendedprice * cast(1 as Decimal) - l_discount), n_name) group by (n_name, rows=6001215) -> .revenue, .n_name    
       JoinSet(customer (Inner) x orders (Inner) x lineitem (Inner) x supplier (Inner) x nation (Inner) x region (Inner), rows=6001215) -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_mktsegment, .c_comment, .o_orderkey, .o_custkey, .o_orderstatus, .o_totalprice, .o_orderdate, .o_orderpriority, .o_clerk, .o_shippriority, .o_comment, .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment, .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment, .n_nationkey, .n_name, .n_regionkey, .n_comment, .r_regionkey, .r_name, .r_comment       
       BinaryEdge { Expression = c_custkey = o_custkey, One = customer, Two = orders }
       BinaryEdge { Expression = l_orderkey = o_orderkey, One = orders, Two = lineitem }
       BinaryEdge { Expression = l_suppkey = s_suppkey, One = lineitem, Two = supplier }
       BinaryEdge { Expression = c_nationkey = s_nationkey, One = customer, Two = supplier }
       BinaryEdge { Expression = s_nationkey = n_nationkey, One = supplier, Two = nation }
       BinaryEdge { Expression = n_regionkey = r_regionkey, One = nation, Two = region }
       UnaryEdge { Expression = r_name = ASIA, Relation = region }
       UnaryEdge { Expression = o_orderdate >= 01/01/1994 00:00:00, Relation = orders }
       UnaryEdge { Expression = o_orderdate < 01/01/1995 00:00:00, Relation = orders }
          Scan(customer, rows=150000) -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_mktsegment, .c_comment          
          Scan(orders, rows=1500000) -> .o_orderkey, .o_custkey, .o_orderstatus, .o_totalprice, .o_orderdate, .o_orderpriority, .o_clerk, .o_shippriority, .o_comment          
          Scan(lineitem, rows=6001215) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment          
          Scan(supplier, rows=10000) -> .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment          
          Scan(nation, rows=25) -> .n_nationkey, .n_name, .n_regionkey, .n_comment          
          Scan(region, rows=5) -> .r_regionkey, .r_name, .r_comment          


Optimized
Project(n_name, revenue, rows=9601) -> .n_name, .revenue
 Sort(revenue DESC), rows=9601 -> .revenue, .n_name 
    Agg(sum(l_extendedprice * cast(1 as Decimal) - l_discount), n_name) group by (n_name, rows=9601) -> .revenue, .n_name    
       Filter(c_nationkey = s_nationkey, rows=9601) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .o_orderkey, .o_custkey, .o_orderdate, .s_suppkey, .s_nationkey, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name, .c_custkey, .c_nationkey       
          Join(Inner on c_custkey = o_custkey, rows=240049) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .o_orderkey, .o_custkey, .o_orderdate, .s_suppkey, .s_nationkey, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name, .c_custkey, .c_nationkey          
             Join(Inner on l_suppkey = s_suppkey, rows=240048) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .o_orderkey, .o_custkey, .o_orderdate, .s_suppkey, .s_nationkey, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name             
                Join(Inner on l_orderkey = o_orderkey, rows=1200243) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .o_orderkey, .o_custkey, .o_orderdate                
                   Scan(lineitem, rows=6001215) with projection  -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount                   
                
                   Filter(o_orderdate < 01/01/1995 00:00:00, rows=300000) -> .o_orderkey, .o_custkey, .o_orderdate                   
                      Filter(o_orderdate >= 01/01/1994 00:00:00, rows=300000) -> .o_orderkey, .o_custkey, .o_orderdate                      
                         Scan(orders, rows=1500000) with projection  -> .o_orderkey, .o_custkey, .o_orderdate                         
             
                Join(Inner on s_nationkey = n_nationkey, rows=2000) -> .s_suppkey, .s_nationkey, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name                
                   Scan(supplier, rows=10000) with projection  -> .s_suppkey, .s_nationkey                   
                
                   Join(Inner on n_regionkey = r_regionkey, rows=5) -> .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name                   
                      Scan(nation, rows=25) with projection  -> .n_nationkey, .n_name, .n_regionkey                      
                   
                      Filter(r_name = ASIA, rows=1) -> .r_regionkey, .r_name                      
                         Scan(region, rows=5) with projection  -> .r_regionkey, .r_name                         
          
             Scan(customer, rows=150000) with projection  -> .c_custkey, .c_nationkey             


Cost Optimized
Project(n_name, revenue) cost (output_rows=9601, cpu=19202, disk=0, total=25465) -> .n_name, .revenue
 Sort(revenue DESC) cost (output_rows=9601, cpu=124813, disk=0, total=25446) -> .n_name, .revenue 
    HashAggregate(n_name, sum(l_extendedprice * cast(1 as Decimal) - l_discount)) cost (output_rows=9601, cpu=57606, disk=0, total=25321) -> .n_name, .revenue    
       Filter(c_nationkey = s_nationkey) cost (output_rows=9601, cpu=3840784, disk=0, total=25263) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .o_orderkey, .o_custkey, .o_orderdate, .s_suppkey, .s_nationkey, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name, .c_custkey, .c_nationkey       
          HashJoin(Inner c_custkey, o_custkey) cost (output_rows=240049, cpu=540048, disk=0, total=21422) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .o_orderkey, .o_custkey, .o_orderdate, .s_suppkey, .s_nationkey, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name, .c_custkey, .c_nationkey          
             HashJoin(Inner s_suppkey, l_suppkey) cost (output_rows=240048, cpu=1204243, disk=0, total=20732) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .o_orderkey, .o_custkey, .o_orderdate, .s_suppkey, .s_nationkey, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name             
                HashJoin(Inner o_orderkey, l_orderkey) cost (output_rows=1200243, cpu=6601215, disk=0, total=19508) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .o_orderkey, .o_custkey, .o_orderdate                
                   FileScan({SolutionDirectory}tpch/1/lineitem2.parquet) cost (output_rows=6001215, cpu=6001215, disk=49, total=6005) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount                
                   Filter(o_orderdate < 01/01/1995 00:00:00) cost (output_rows=300000, cpu=900000, disk=0, total=6901) -> .o_orderkey, .o_custkey, .o_orderdate                   
                      Filter(o_orderdate >= 01/01/1994 00:00:00) cost (output_rows=300000, cpu=4500000, disk=0, total=6001) -> .o_orderkey, .o_custkey, .o_orderdate                      
                         FileScan({SolutionDirectory}tpch/1/orders2.parquet) cost (output_rows=1500000, cpu=1500000, disk=13, total=1501) -> .o_orderkey, .o_custkey, .o_orderdate             
                HashJoin(Inner n_nationkey, s_nationkey) cost (output_rows=2000, cpu=10010, disk=0, total=20) -> .s_suppkey, .s_nationkey, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name                
                   FileScan({SolutionDirectory}tpch/1/supplier2.parquet) cost (output_rows=10000, cpu=10000, disk=1, total=10) -> .s_suppkey, .s_nationkey                
                   HashJoin(Inner r_regionkey, n_regionkey) cost (output_rows=5, cpu=27, disk=0, total=0) -> .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name                   
                      FileScan({SolutionDirectory}tpch/1/nation2.parquet) cost (output_rows=25, cpu=25, disk=1, total=0) -> .n_nationkey, .n_name, .n_regionkey                   
                      Filter(r_name = ASIA) cost (output_rows=1, cpu=10, disk=0, total=0) -> .r_regionkey, .r_name                      
                         FileScan({SolutionDirectory}tpch/1/region2.parquet) cost (output_rows=5, cpu=5, disk=1, total=0) -> .r_regionkey, .r_name          
             FileScan({SolutionDirectory}tpch/1/customer2.parquet) cost (output_rows=150000, cpu=150000, disk=2, total=150) -> .c_custkey, .c_nationkey