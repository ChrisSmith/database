SELECT
    c_custkey,
    c_name,
    SUM(l_extendedprice * (1 - l_discount)) AS revenue,
    c_acctbal,
    n_name,
    c_address,
    c_phone,
    c_comment
FROM
    customer,
    orders,
    lineitem,
    nation
WHERE
    c_custkey = o_custkey
    AND l_orderkey = o_orderkey
    AND o_orderdate >= date '1993-10-01'
    AND o_orderdate < date '1993-10-01' + interval '3' month
    AND l_returnflag = 'R'
    AND c_nationkey = n_nationkey
GROUP BY
    c_custkey,
    c_name,
    c_acctbal,
    c_phone,
    n_name,
    c_address,
    c_comment
ORDER BY
    revenue DESC;


Original
Project(c_custkey, c_name, revenue, c_acctbal, n_name, c_address, c_phone, c_comment, rows=6001215) -> .c_custkey, .c_name, .revenue, .c_acctbal, .n_name, .c_address, .c_phone, .c_comment
 Sort(revenue DESC), rows=6001215 -> .revenue, .c_custkey, .c_name, .c_acctbal, .c_phone, .n_name, .c_address, .c_comment 
    Agg(SUM(l_extendedprice * cast(1 as Decimal) - l_discount), c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment) group by (c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment, rows=6001215) -> .revenue, .c_custkey, .c_name, .c_acctbal, .c_phone, .n_name, .c_address, .c_comment    
       JoinSet(customer (Inner) x orders (Inner) x lineitem (Inner) x nation (Inner), rows=6001215) -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_mktsegment, .c_comment, .o_orderkey, .o_custkey, .o_orderstatus, .o_totalprice, .o_orderdate, .o_orderpriority, .o_clerk, .o_shippriority, .o_comment, .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment, .n_nationkey, .n_name, .n_regionkey, .n_comment       
       BinaryEdge { Expression = c_custkey = o_custkey, One = customer, Two = orders }
       BinaryEdge { Expression = l_orderkey = o_orderkey, One = orders, Two = lineitem }
       UnaryEdge { Expression = o_orderdate >= 10/01/1993 00:00:00, Relation = orders }
       UnaryEdge { Expression = o_orderdate < 01/01/1994 00:00:00, Relation = orders }
       UnaryEdge { Expression = l_returnflag = R, Relation = lineitem }
       BinaryEdge { Expression = c_nationkey = n_nationkey, One = customer, Two = nation }
          Scan(customer, rows=150000) -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_mktsegment, .c_comment          
          Scan(orders, rows=1500000) -> .o_orderkey, .o_custkey, .o_orderstatus, .o_totalprice, .o_orderdate, .o_orderpriority, .o_clerk, .o_shippriority, .o_comment          
          Scan(lineitem, rows=6001215) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment          
          Scan(nation, rows=25) -> .n_nationkey, .n_name, .n_regionkey, .n_comment          


Optimized
Project(c_custkey, c_name, revenue, c_acctbal, n_name, c_address, c_phone, c_comment, rows=1215000) -> .c_custkey, .c_name, .revenue, .c_acctbal, .n_name, .c_address, .c_phone, .c_comment
 Sort(revenue DESC), rows=1215000 -> .revenue, .c_custkey, .c_name, .c_acctbal, .c_phone, .n_name, .c_address, .c_comment 
    Agg(SUM(l_extendedprice * cast(1 as Decimal) - l_discount), c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment) group by (c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment, rows=1215000) -> .revenue, .c_custkey, .c_name, .c_acctbal, .c_phone, .n_name, .c_address, .c_comment    
       Join(Inner on c_nationkey = n_nationkey, rows=1215000) -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_comment, .o_orderkey, .o_custkey, .o_orderdate, .l_orderkey, .l_extendedprice, .l_discount, .l_returnflag, .n_nationkey, .n_name       
          Join(Inner on l_orderkey = o_orderkey, rows=1215000) -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_comment, .o_orderkey, .o_custkey, .o_orderdate, .l_orderkey, .l_extendedprice, .l_discount, .l_returnflag          
             Join(Inner on c_custkey = o_custkey, rows=1215000) -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_comment, .o_orderkey, .o_custkey, .o_orderdate             
                Scan(customer, rows=150000) with projection  -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_comment                
             
                Filter(o_orderdate < 01/01/1994 00:00:00, rows=1215000) -> .o_orderkey, .o_custkey, .o_orderdate                
                   Filter(o_orderdate >= 10/01/1993 00:00:00, rows=1350000) -> .o_orderkey, .o_custkey, .o_orderdate                   
                      Scan(orders, rows=1500000) with projection  -> .o_orderkey, .o_custkey, .o_orderdate                      
          
             Filter(l_returnflag = R, rows=1200243) -> .l_orderkey, .l_extendedprice, .l_discount, .l_returnflag             
                Scan(lineitem, rows=6001215) with projection  -> .l_orderkey, .l_extendedprice, .l_discount, .l_returnflag                
       
          Scan(nation, rows=25) with projection  -> .n_nationkey, .n_name          


Cost Optimized
Project(c_custkey, c_name, revenue, c_acctbal, n_name, c_address, c_phone, c_comment) cost (output_rows=10, cpu=80, disk=0, total=49094) -> .c_custkey, .c_name, .revenue, .c_acctbal, .n_name, .c_address, .c_phone, .c_comment
 Sort(revenue DESC) cost (output_rows=10, cpu=30, disk=0, total=49094) -> .c_custkey, .c_name, .c_acctbal, .c_phone, .n_name, .c_address, .c_comment, .revenue 
    HashAggregate(c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment, SUM(l_extendedprice * cast(1 as Decimal) - l_discount)) cost (output_rows=10, cpu=10802178, disk=0, total=49094) -> .c_custkey, .c_name, .c_acctbal, .c_phone, .n_name, .c_address, .c_comment, .revenue    
       HashJoin(Inner n_nationkey, c_nationkey) cost (output_rows=600121, cpu=600171, disk=0, total=38292) -> .l_orderkey, .l_extendedprice, .l_discount, .l_returnflag, .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_comment, .o_orderkey, .o_custkey, .o_orderdate, .n_nationkey, .n_name       
          HashJoin(Inner o_orderkey, l_orderkey) cost (output_rows=600121, cpu=900121, disk=0, total=37692) -> .l_orderkey, .l_extendedprice, .l_discount, .l_returnflag, .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_comment, .o_orderkey, .o_custkey, .o_orderdate          
             Filter(l_returnflag = R) cost (output_rows=600121, cpu=24004860, disk=0, total=30010) -> .l_orderkey, .l_extendedprice, .l_discount, .l_returnflag             
                FileScan({SolutionDirectory}tpch/1/lineitem2.parquet) cost (output_rows=6001215, cpu=6001215, disk=49, total=6005) -> .l_orderkey, .l_extendedprice, .l_discount, .l_returnflag          
             HashJoin(Inner o_custkey, c_custkey) cost (output_rows=150000, cpu=180000, disk=0, total=6781) -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_comment, .o_orderkey, .o_custkey, .o_orderdate             
                FileScan({SolutionDirectory}tpch/1/customer2.parquet) cost (output_rows=150000, cpu=150000, disk=2, total=150) -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_comment             
                Filter(o_orderdate < 01/01/1994 00:00:00) cost (output_rows=15000, cpu=450000, disk=0, total=6451) -> .o_orderkey, .o_custkey, .o_orderdate                
                   Filter(o_orderdate >= 10/01/1993 00:00:00) cost (output_rows=150000, cpu=4500000, disk=0, total=6001) -> .o_orderkey, .o_custkey, .o_orderdate                   
                      FileScan({SolutionDirectory}tpch/1/orders2.parquet) cost (output_rows=1500000, cpu=1500000, disk=13, total=1501) -> .o_orderkey, .o_custkey, .o_orderdate       
          FileScan({SolutionDirectory}tpch/1/nation2.parquet) cost (output_rows=25, cpu=25, disk=1, total=0) -> .n_nationkey, .n_name