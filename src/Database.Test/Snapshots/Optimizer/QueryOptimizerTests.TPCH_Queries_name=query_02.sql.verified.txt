select
    s_acctbal,
    s_name,
    n_name,
    p_partkey,
    p_mfgr,
    s_address,
    s_phone,
    s_comment
from
    part,
    supplier,
    partsupp,
    nation,
    region
where
        p_partkey = ps_partkey
    and s_suppkey = ps_suppkey
    and p_size = 15
    and p_type like '%BRASS'
    and s_nationkey = n_nationkey
    and n_regionkey = r_regionkey
    and r_name = 'EUROPE'
    and ps_supplycost = (
        select
            min(ps_supplycost)
            from partsupp, supplier, nation, region
            where
                p_partkey = ps_partkey
            and s_suppkey = ps_suppkey
            and s_nationkey = n_nationkey
            and n_regionkey = r_regionkey
            and r_name = 'EUROPE'
        )
order by
    s_acctbal desc,
    n_name,
    s_name,
    p_partkey
limit 100;


Original
PlanWithSubQueries(c=1, u=0) -> .s_acctbal, .s_name, .n_name, .p_partkey, .p_mfgr, .s_address, .s_phone, .s_comment
 Project(min(ps_supplycost)) -> .min(ps_supplycost) 
    Agg(min(ps_supplycost)) group by () -> .min(ps_supplycost)    
       JoinSet(partsupp (Inner) x supplier (Inner) x nation (Inner) x region (Inner)) -> .ps_partkey, .ps_suppkey, .ps_availqty, .ps_supplycost, .ps_comment, .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment, .n_nationkey, .n_name, .n_regionkey, .n_comment, .r_regionkey, .r_name, .r_comment       
       BinaryEdge { Expression = s_suppkey = ps_suppkey, One = partsupp, Two = supplier }
       BinaryEdge { Expression = s_nationkey = n_nationkey, One = supplier, Two = nation }
       BinaryEdge { Expression = n_regionkey = r_regionkey, One = nation, Two = region }
       UnaryEdge { Expression = r_name = EUROPE, Relation = region }
       p_partkey = ps_partkey
          Scan(partsupp) -> .ps_partkey, .ps_suppkey, .ps_availqty, .ps_supplycost, .ps_comment          
          Scan(supplier) -> .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment          
          Scan(nation) -> .n_nationkey, .n_name, .n_regionkey, .n_comment          
          Scan(region) -> .r_regionkey, .r_name, .r_comment          
 Limit(n=100) -> .s_acctbal, .s_name, .n_name, .p_partkey, .p_mfgr, .s_address, .s_phone, .s_comment 
    Project(s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment) -> .s_acctbal, .s_name, .n_name, .p_partkey, .p_mfgr, .s_address, .s_phone, .s_comment    
       Sort(s_acctbal DESC, n_name ASC, s_name ASC, p_partkey ASC) -> .p_partkey, .p_name, .p_mfgr, .p_brand, .p_type, .p_size, .p_container, .p_retailprice, .p_comment, .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment, .ps_partkey, .ps_suppkey, .ps_availqty, .ps_supplycost, .ps_comment, .n_nationkey, .n_name, .n_regionkey, .n_comment, .r_regionkey, .r_name, .r_comment       
          JoinSet(part (Inner) x supplier (Inner) x partsupp (Inner) x nation (Inner) x region (Inner)) -> .p_partkey, .p_name, .p_mfgr, .p_brand, .p_type, .p_size, .p_container, .p_retailprice, .p_comment, .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment, .ps_partkey, .ps_suppkey, .ps_availqty, .ps_supplycost, .ps_comment, .n_nationkey, .n_name, .n_regionkey, .n_comment, .r_regionkey, .r_name, .r_comment          
          BinaryEdge { Expression = p_partkey = ps_partkey, One = part, Two = partsupp }
          BinaryEdge { Expression = s_suppkey = ps_suppkey, One = supplier, Two = partsupp }
          UnaryEdge { Expression = p_size = 15, Relation = part }
          UnaryEdge { Expression = p_type like %BRASS, Relation = part }
          BinaryEdge { Expression = s_nationkey = n_nationkey, One = supplier, Two = nation }
          BinaryEdge { Expression = n_regionkey = r_regionkey, One = nation, Two = region }
          UnaryEdge { Expression = r_name = EUROPE, Relation = region }
          UnaryEdge { Expression = ps_supplycost = correlated-subquery(1), Relation = partsupp }
             Scan(part) -> .p_partkey, .p_name, .p_mfgr, .p_brand, .p_type, .p_size, .p_container, .p_retailprice, .p_comment             
             Scan(supplier) -> .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment             
             Scan(partsupp) -> .ps_partkey, .ps_suppkey, .ps_availqty, .ps_supplycost, .ps_comment             
             Scan(nation) -> .n_nationkey, .n_name, .n_regionkey, .n_comment             
             Scan(region) -> .r_regionkey, .r_name, .r_comment             


Optimized
PlanWithSubQueries(c=1, u=0) -> .s_acctbal, .s_name, .n_name, .p_partkey, .p_mfgr, .s_address, .s_phone, .s_comment
 Project(min(ps_supplycost)) -> .min(ps_supplycost) 
    Agg(min(ps_supplycost)) group by () -> .min(ps_supplycost)    
       Filter(p_partkey = ps_partkey) -> .ps_partkey, .ps_suppkey, .ps_supplycost, .s_suppkey, .s_nationkey, .n_nationkey, .n_regionkey, .r_regionkey, .r_name       
          Join(Inner on n_regionkey = r_regionkey) -> .ps_partkey, .ps_suppkey, .ps_supplycost, .s_suppkey, .s_nationkey, .n_nationkey, .n_regionkey, .r_regionkey, .r_name          
             Join(Inner on s_nationkey = n_nationkey) -> .ps_partkey, .ps_suppkey, .ps_supplycost, .s_suppkey, .s_nationkey, .n_nationkey, .n_regionkey             
                Join(Inner on s_suppkey = ps_suppkey) -> .ps_partkey, .ps_suppkey, .ps_supplycost, .s_suppkey, .s_nationkey                
                   Scan(partsupp) with projection  -> .ps_partkey, .ps_suppkey, .ps_supplycost                   
                
                   Scan(supplier) with projection  -> .s_suppkey, .s_nationkey                   
             
                Scan(nation) with projection  -> .n_nationkey, .n_regionkey                
          
             Filter(r_name = EUROPE) -> .r_regionkey, .r_name             
                Scan(region) with projection  -> .r_regionkey, .r_name                
 Limit(n=100) -> .s_acctbal, .s_name, .n_name, .p_partkey, .p_mfgr, .s_address, .s_phone, .s_comment 
    Project(s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment) -> .s_acctbal, .s_name, .n_name, .p_partkey, .p_mfgr, .s_address, .s_phone, .s_comment    
       Sort(s_acctbal DESC, n_name ASC, s_name ASC, p_partkey ASC) -> .p_partkey, .p_mfgr, .p_type, .p_size, .ps_partkey, .ps_suppkey, .ps_supplycost, .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name       
          Filter(ps_supplycost = correlated-subquery(1)) -> .p_partkey, .p_mfgr, .p_type, .p_size, .ps_partkey, .ps_suppkey, .ps_supplycost, .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name          
             Join(Inner on n_regionkey = r_regionkey) -> .p_partkey, .p_mfgr, .p_type, .p_size, .ps_partkey, .ps_suppkey, .ps_supplycost, .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment, .n_nationkey, .n_name, .n_regionkey, .r_regionkey, .r_name             
                Join(Inner on s_nationkey = n_nationkey) -> .p_partkey, .p_mfgr, .p_type, .p_size, .ps_partkey, .ps_suppkey, .ps_supplycost, .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment, .n_nationkey, .n_name, .n_regionkey                
                   Join(Inner on s_suppkey = ps_suppkey) -> .p_partkey, .p_mfgr, .p_type, .p_size, .ps_partkey, .ps_suppkey, .ps_supplycost, .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment                   
                      Join(Inner on p_partkey = ps_partkey) -> .p_partkey, .p_mfgr, .p_type, .p_size, .ps_partkey, .ps_suppkey, .ps_supplycost                      
                         Filter(p_type like %BRASS) -> .p_partkey, .p_mfgr, .p_type, .p_size                         
                            Filter(p_size = 15) -> .p_partkey, .p_mfgr, .p_type, .p_size                            
                               Scan(part) with projection  -> .p_partkey, .p_mfgr, .p_type, .p_size                               
                      
                         Scan(partsupp) with projection  -> .ps_partkey, .ps_suppkey, .ps_supplycost                         
                   
                      Scan(supplier) with projection  -> .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment                      
                
                   Scan(nation) with projection  -> .n_nationkey, .n_name, .n_regionkey                   
             
                Filter(r_name = EUROPE) -> .r_regionkey, .r_name                
                   Scan(region) with projection  -> .r_regionkey, .r_name                   


