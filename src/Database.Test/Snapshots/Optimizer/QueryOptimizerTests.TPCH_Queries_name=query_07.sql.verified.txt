select
    supp_nation,
    cust_nation,
    l_year,
    sum(volume) as revenue
from (
    select
        n1.n_name as supp_nation,
        n2.n_name as cust_nation,
        extract(year from l_shipdate) as l_year,
        l_extendedprice * (1 - l_discount) as volume
    from
        supplier,
        lineitem,
        orders,
        customer,
        nation n1,
        nation n2
    where
            s_suppkey = l_suppkey
        and o_orderkey = l_orderkey
        and c_custkey = o_custkey
        and s_nationkey = n1.n_nationkey
        and c_nationkey = n2.n_nationkey
        and (
            (n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
            or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')
        )
        and l_shipdate between date '1995-01-01' and date '1996-12-31'
    ) as shipping
group by
    supp_nation,
    cust_nation,
    l_year
order by
    supp_nation,
    cust_nation,
    l_year;


Original
Project(supp_nation, cust_nation, l_year, revenue) -> .supp_nation, .cust_nation, .l_year, .revenue
 Sort(supp_nation ASC, cust_nation ASC, l_year ASC) -> .revenue, .supp_nation, .cust_nation, .l_year 
    Agg(sum(volume), supp_nation, cust_nation, l_year) group by (supp_nation, cust_nation, l_year) -> .revenue, .supp_nation, .cust_nation, .l_year    
       Project(n_name, n_name, extract(year, l_shipdate), l_extendedprice * cast(1 as Decimal) - l_discount) -> shipping.supp_nation, shipping.cust_nation, shipping.l_year, shipping.volume       
          JoinSet(supplier (Inner) x lineitem (Inner) x orders (Inner) x customer (Inner) x n1 (Inner) x n2 (Inner)) -> .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment, .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment, .o_orderkey, .o_custkey, .o_orderstatus, .o_totalprice, .o_orderdate, .o_orderpriority, .o_clerk, .o_shippriority, .o_comment, .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_mktsegment, .c_comment, n1.n_nationkey, n1.n_name, n1.n_regionkey, n1.n_comment, n2.n_nationkey, n2.n_name, n2.n_regionkey, n2.n_comment          
          BinaryEdge { Expression = s_suppkey = l_suppkey, One = supplier, Two = lineitem }
          BinaryEdge { Expression = o_orderkey = l_orderkey, One = lineitem, Two = orders }
          BinaryEdge { Expression = c_custkey = o_custkey, One = orders, Two = customer }
          BinaryEdge { Expression = s_nationkey = n_nationkey, One = supplier, Two = n1 }
          BinaryEdge { Expression = c_nationkey = n_nationkey, One = customer, Two = n2 }
          BinaryEdge { Expression = n_name != n_name, One = n1, Two = n2 }
          UnaryEdge { Expression = n_name = FRANCE or n_name = GERMANY, Relation = n1 }
          UnaryEdge { Expression = n_name = GERMANY or n_name = FRANCE, Relation = n2 }
          UnaryEdge { Expression = l_shipdate between 01/01/1995 00:00:00 and 12/31/1996 00:00:00, Relation = lineitem }
             Scan(supplier) -> .s_suppkey, .s_name, .s_address, .s_nationkey, .s_phone, .s_acctbal, .s_comment             
             Scan(lineitem) -> .l_orderkey, .l_partkey, .l_suppkey, .l_linenumber, .l_quantity, .l_extendedprice, .l_discount, .l_tax, .l_returnflag, .l_linestatus, .l_shipdate, .l_commitdate, .l_receiptdate, .l_shipinstruct, .l_shipmode, .l_comment             
             Scan(orders) -> .o_orderkey, .o_custkey, .o_orderstatus, .o_totalprice, .o_orderdate, .o_orderpriority, .o_clerk, .o_shippriority, .o_comment             
             Scan(customer) -> .c_custkey, .c_name, .c_address, .c_nationkey, .c_phone, .c_acctbal, .c_mktsegment, .c_comment             
             Scan(nation) -> n1.n_nationkey, n1.n_name, n1.n_regionkey, n1.n_comment             
             Scan(nation) -> n2.n_nationkey, n2.n_name, n2.n_regionkey, n2.n_comment             


Optimized
Project(supp_nation, cust_nation, l_year, revenue) -> .supp_nation, .cust_nation, .l_year, .revenue
 Sort(supp_nation ASC, cust_nation ASC, l_year ASC) -> .revenue, .supp_nation, .cust_nation, .l_year 
    Agg(sum(volume), supp_nation, cust_nation, l_year) group by (supp_nation, cust_nation, l_year) -> .revenue, .supp_nation, .cust_nation, .l_year    
       Project(n_name, n_name, extract(year, l_shipdate), l_extendedprice * cast(1 as Decimal) - l_discount) -> shipping.supp_nation, shipping.cust_nation, shipping.l_year, shipping.volume       
          Filter(n_name != n_name) -> .s_suppkey, .s_nationkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .o_orderkey, .o_custkey, .c_custkey, .c_nationkey, n1.n_nationkey, n1.n_name, n2.n_nationkey, n2.n_name          
             Join(Inner on c_nationkey = n_nationkey) -> .s_suppkey, .s_nationkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .o_orderkey, .o_custkey, .c_custkey, .c_nationkey, n1.n_nationkey, n1.n_name, n2.n_nationkey, n2.n_name             
                Join(Inner on s_nationkey = n_nationkey) -> .s_suppkey, .s_nationkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .o_orderkey, .o_custkey, .c_custkey, .c_nationkey, n1.n_nationkey, n1.n_name                
                   Join(Inner on c_custkey = o_custkey) -> .s_suppkey, .s_nationkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .o_orderkey, .o_custkey, .c_custkey, .c_nationkey                   
                      Join(Inner on o_orderkey = l_orderkey) -> .s_suppkey, .s_nationkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .o_orderkey, .o_custkey                      
                         Join(Inner on s_suppkey = l_suppkey) -> .s_suppkey, .s_nationkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate                         
                            Scan(supplier) with projection  -> .s_suppkey, .s_nationkey                            
                         
                            Filter(l_shipdate between 01/01/1995 00:00:00 and 12/31/1996 00:00:00) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate                            
                               Scan(lineitem) with projection  -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate                               
                      
                         Scan(orders) with projection  -> .o_orderkey, .o_custkey                         
                   
                      Scan(customer) with projection  -> .c_custkey, .c_nationkey                      
                
                   Filter(n_name = FRANCE or n_name = GERMANY) -> n1.n_nationkey, n1.n_name                   
                      Scan(nation) with projection  -> n1.n_nationkey, n1.n_name                      
             
                Filter(n_name = GERMANY or n_name = FRANCE) -> n2.n_nationkey, n2.n_name                
                   Scan(nation) with projection  -> n2.n_nationkey, n2.n_name                   


Cost Optimized
Project(supp_nation, cust_nation, l_year, revenue) cost (output_rows=10, cpu=40, disk=0, total=71485) -> .supp_nation, .cust_nation, .l_year, .revenue
 Sort(supp_nation ASC, cust_nation ASC, l_year ASC) cost (output_rows=10, cpu=90, disk=0, total=71485) -> .supp_nation, .cust_nation, .l_year, .revenue 
    HashAggregate(supp_nation, cust_nation, l_year, sum(volume)) cost (output_rows=10, cpu=1500000, disk=0, total=71485) -> .supp_nation, .cust_nation, .l_year, .revenue    
       Project(n_name, n_name, extract(year, l_shipdate), l_extendedprice * cast(1 as Decimal) - l_discount) cost (output_rows=150000, cpu=900000, disk=0, total=69985) -> shipping.supp_nation, shipping.cust_nation, shipping.l_year, shipping.volume       
          Filter(n_name != n_name) cost (output_rows=150000, cpu=22500000, disk=0, total=69085) -> .o_orderkey, .o_custkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .s_suppkey, .s_nationkey, .c_custkey, .c_nationkey, n1.n_nationkey, n1.n_name, n2.n_nationkey, n2.n_name          
             HashJoin(Inner n_nationkey, c_nationkey) cost (output_rows=1500000, cpu=1500054, disk=0, total=46585) -> .o_orderkey, .o_custkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .s_suppkey, .s_nationkey, .c_custkey, .c_nationkey, n1.n_nationkey, n1.n_name, n2.n_nationkey, n2.n_name             
                HashJoin(Inner n_nationkey, s_nationkey) cost (output_rows=1500000, cpu=1500054, disk=0, total=45084) -> .o_orderkey, .o_custkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .s_suppkey, .s_nationkey, .c_custkey, .c_nationkey, n1.n_nationkey, n1.n_name                
                   HashJoin(Inner c_custkey, o_custkey) cost (output_rows=1500000, cpu=1950000, disk=2, total=43583) -> .o_orderkey, .o_custkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .s_suppkey, .s_nationkey, .c_custkey, .c_nationkey                   
                      HashJoin(Inner l_orderkey, o_orderkey) cost (output_rows=1500000, cpu=3330363, disk=1, total=41483) -> .o_orderkey, .o_custkey, .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .s_suppkey, .s_nationkey                      
                         FileScan({SolutionDirectory}tpch/1/orders2.parquet) cost (output_rows=1500000, cpu=1500000, disk=13, total=1501) -> .o_orderkey, .o_custkey                      
                         HashJoin(Inner s_suppkey, l_suppkey) cost (output_rows=600121, cpu=630121, disk=1, total=36652) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate, .s_suppkey, .s_nationkey                         
                            Filter(l_shipdate between 01/01/1995 00:00:00 and 12/31/1996 00:00:00) cost (output_rows=600121, cpu=30006075, disk=0, total=36011) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate                            
                               FileScan({SolutionDirectory}tpch/1/lineitem2.parquet) cost (output_rows=6001215, cpu=6001215, disk=49, total=6005) -> .l_orderkey, .l_suppkey, .l_extendedprice, .l_discount, .l_shipdate                         
                            FileScan({SolutionDirectory}tpch/1/supplier2.parquet) cost (output_rows=10000, cpu=10000, disk=1, total=10) -> .s_suppkey, .s_nationkey                   
                      FileScan({SolutionDirectory}tpch/1/customer2.parquet) cost (output_rows=150000, cpu=150000, disk=2, total=150) -> .c_custkey, .c_nationkey                
                   Filter(n_name = FRANCE or n_name = GERMANY) cost (output_rows=2, cpu=50, disk=0, total=0) -> n1.n_nationkey, n1.n_name                   
                      FileScan({SolutionDirectory}tpch/1/nation2.parquet) cost (output_rows=25, cpu=25, disk=1, total=0) -> n1.n_nationkey, n1.n_name             
                Filter(n_name = GERMANY or n_name = FRANCE) cost (output_rows=2, cpu=50, disk=0, total=0) -> n2.n_nationkey, n2.n_name                
                   FileScan({SolutionDirectory}tpch/1/nation2.parquet) cost (output_rows=25, cpu=25, disk=1, total=0) -> n2.n_nationkey, n2.n_name